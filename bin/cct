#!/usr/bin/env ruby

require "optparse"
require "ostruct"
require "pathname"

options = OpenStruct.new

subcommand_help = <<HELP
Commonly used commands are:
  test   : Manage tests
  config : Show current config data
  log    : Show recent log

HELP

LOCAL_CONFIG = File.join("/home/#{ENV["USER"]}/.cct/config.yaml")

begin
  op = OptionParser.new do |o|
    o.banner = "Usage: cct COMMAND [options]"
    o.separator ""
    o.separator subcommand_help
    o.separator "Options: "
    o.on('--help', "-h", "Show this message and exit") { puts o; exit }
    o.on('--verbose', "-v", "Show more about what's going on") do |verbose|
      options.verbose = verbose
    end
    o.separator ""
    o.separator "See cct COMMAND --help' for more information on a specific command"
  end

rescue OptionParser::MissingArgument,
       OptionParser::InvalidOption => err
  abort "Error: #{err.message}"
end

require_relative '../lib/cct'
include Cct::Cli

if ARGV.first.nil?
  puts "No command given"
  puts op.help
  abort
end

safely_parse { op.order! }
command_name = ARGV.shift

# Use #command method from Cct::Cli to define command options if needed
command :test do |test|
  OptionParser.new do |op|
    op.banner = "Usage: test [options]"
    op.on("-t", "--tags", "Tag names separated with commas, e.g. --tags admin,ntp") do |tags|
      options.tags = ARGV.shift
    end
  end
end

run_command(command_name, options)
